name: Deploy Frontend to AWS EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build frontend
      run: npm run build:prod
      env:
        CI: false
        
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to EC2
      run: |
        # Create deployment package
        tar -czf frontend-deploy.tar.gz build/ src/ public/ package*.json .env.production *.config.js 2>/dev/null || tar -czf frontend-deploy.tar.gz build/ src/ public/ package*.json .env.production
        
        # Upload to EC2
        scp -i ~/.ssh/id_rsa frontend-deploy.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/
        
        # Deploy on EC2
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e
          
          # Create frontend directory
          sudo mkdir -p /home/ec2-user/hetasinglar-frontend
          sudo chown ec2-user:ec2-user /home/ec2-user/hetasinglar-frontend
          
          # Extract deployment package
          cd /home/ec2-user/hetasinglar-frontend
          tar -xzf /tmp/frontend-deploy.tar.gz
          rm /tmp/frontend-deploy.tar.gz
          
          # Install Node.js if not present
          if ! command -v node &> /dev/null; then
            curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
            sudo yum install -y nodejs
          fi
          
          # Install nginx if not present
          if ! command -v nginx &> /dev/null; then
            sudo amazon-linux-extras install -y nginx1
          fi
          
          # Install dependencies
          npm install --production
          
          # Create nginx configuration
          sudo tee /etc/nginx/conf.d/hetasinglar.conf > /dev/null << 'NGINX_EOF'
        server {
            listen 80;
            server_name hetasinglar.duckdns.org www.hetasinglar.duckdns.org;
            
            root /home/ec2-user/hetasinglar-frontend/build;
            index index.html index.htm;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            
            # Gzip compression
            gzip on;
            gzip_vary on;
            gzip_min_length 1024;
            gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;
            
            # Handle React Router (SPA)
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # API proxy to backend
            location /api/ {
                proxy_pass http://localhost:5000/api/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            # WebSocket proxy
            location /socket.io/ {
                proxy_pass http://localhost:5000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
        NGINX_EOF
          
          # Test and restart nginx
          sudo nginx -t
          sudo systemctl enable nginx
          sudo systemctl restart nginx
          
          echo "✅ Frontend deployment completed successfully!"
        EOF
        
    - name: Verify deployment
      run: |
        echo "🚀 Deployment completed!"
        echo "Frontend should be available at: http://hetasinglar.duckdns.org"
        
        # Optional: Check if the site is responding
        sleep 10
        if curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.EC2_HOST }} | grep -q "200\|301\|302"; then
          echo "✅ Site is responding!"
        else
          echo "⚠️ Site may need a few moments to start"
        fi